// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.21.4
// source: chord.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Key struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key       string           `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	HashTable map[string]int32 `protobuf:"bytes,2,rep,name=hash_table,json=hashTable,proto3" json:"hash_table,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (x *Key) Reset() {
	*x = Key{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chord_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Key) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Key) ProtoMessage() {}

func (x *Key) ProtoReflect() protoreflect.Message {
	mi := &file_chord_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Key.ProtoReflect.Descriptor instead.
func (*Key) Descriptor() ([]byte, []int) {
	return file_chord_proto_rawDescGZIP(), []int{0}
}

func (x *Key) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *Key) GetHashTable() map[string]int32 {
	if x != nil {
		return x.HashTable
	}
	return nil
}

type ResponseNode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IpAddr    string `protobuf:"bytes,1,opt,name=ip_addr,json=ipAddr,proto3" json:"ip_addr,omitempty"`
	Port      string `protobuf:"bytes,2,opt,name=port,proto3" json:"port,omitempty"`
	FoundFlag bool   `protobuf:"varint,3,opt,name=found_flag,json=foundFlag,proto3" json:"found_flag,omitempty"`
}

func (x *ResponseNode) Reset() {
	*x = ResponseNode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chord_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseNode) ProtoMessage() {}

func (x *ResponseNode) ProtoReflect() protoreflect.Message {
	mi := &file_chord_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseNode.ProtoReflect.Descriptor instead.
func (*ResponseNode) Descriptor() ([]byte, []int) {
	return file_chord_proto_rawDescGZIP(), []int{1}
}

func (x *ResponseNode) GetIpAddr() string {
	if x != nil {
		return x.IpAddr
	}
	return ""
}

func (x *ResponseNode) GetPort() string {
	if x != nil {
		return x.Port
	}
	return ""
}

func (x *ResponseNode) GetFoundFlag() bool {
	if x != nil {
		return x.FoundFlag
	}
	return false
}

type NodeIp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	IpAddr string `protobuf:"bytes,2,opt,name=ip_addr,json=ipAddr,proto3" json:"ip_addr,omitempty"`
	Port   string `protobuf:"bytes,3,opt,name=port,proto3" json:"port,omitempty"`
}

func (x *NodeIp) Reset() {
	*x = NodeIp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chord_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeIp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeIp) ProtoMessage() {}

func (x *NodeIp) ProtoReflect() protoreflect.Message {
	mi := &file_chord_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeIp.ProtoReflect.Descriptor instead.
func (*NodeIp) Descriptor() ([]byte, []int) {
	return file_chord_proto_rawDescGZIP(), []int{2}
}

func (x *NodeIp) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *NodeIp) GetIpAddr() string {
	if x != nil {
		return x.IpAddr
	}
	return ""
}

func (x *NodeIp) GetPort() string {
	if x != nil {
		return x.Port
	}
	return ""
}

type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chord_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_chord_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_chord_proto_rawDescGZIP(), []int{3}
}

type Node struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int32            `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CurrIp    *NodeIp          `protobuf:"bytes,2,opt,name=curr_ip,json=currIp,proto3" json:"curr_ip,omitempty"`
	SuccIp    *NodeIp          `protobuf:"bytes,3,opt,name=succ_ip,json=succIp,proto3" json:"succ_ip,omitempty"`
	PredIp    *NodeIp          `protobuf:"bytes,4,opt,name=pred_ip,json=predIp,proto3" json:"pred_ip,omitempty"`
	HashTable map[string]int32 `protobuf:"bytes,5,rep,name=hash_table,json=hashTable,proto3" json:"hash_table,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (x *Node) Reset() {
	*x = Node{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chord_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Node) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Node) ProtoMessage() {}

func (x *Node) ProtoReflect() protoreflect.Message {
	mi := &file_chord_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Node.ProtoReflect.Descriptor instead.
func (*Node) Descriptor() ([]byte, []int) {
	return file_chord_proto_rawDescGZIP(), []int{4}
}

func (x *Node) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Node) GetCurrIp() *NodeIp {
	if x != nil {
		return x.CurrIp
	}
	return nil
}

func (x *Node) GetSuccIp() *NodeIp {
	if x != nil {
		return x.SuccIp
	}
	return nil
}

func (x *Node) GetPredIp() *NodeIp {
	if x != nil {
		return x.PredIp
	}
	return nil
}

func (x *Node) GetHashTable() map[string]int32 {
	if x != nil {
		return x.HashTable
	}
	return nil
}

type IdM struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	M  int32 `protobuf:"varint,2,opt,name=m,proto3" json:"m,omitempty"`
}

func (x *IdM) Reset() {
	*x = IdM{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chord_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IdM) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IdM) ProtoMessage() {}

func (x *IdM) ProtoReflect() protoreflect.Message {
	mi := &file_chord_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IdM.ProtoReflect.Descriptor instead.
func (*IdM) Descriptor() ([]byte, []int) {
	return file_chord_proto_rawDescGZIP(), []int{5}
}

func (x *IdM) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *IdM) GetM() int32 {
	if x != nil {
		return x.M
	}
	return 0
}

var File_chord_proto protoreflect.FileDescriptor

var file_chord_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x63, 0x68, 0x6f, 0x72, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x63,
	0x68, 0x6f, 0x72, 0x64, 0x22, 0x8f, 0x01, 0x0a, 0x03, 0x4b, 0x65, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x38,
	0x0a, 0x0a, 0x68, 0x61, 0x73, 0x68, 0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x68, 0x6f, 0x72, 0x64, 0x2e, 0x4b, 0x65, 0x79, 0x2e, 0x48,
	0x61, 0x73, 0x68, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x09, 0x68,
	0x61, 0x73, 0x68, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x1a, 0x3c, 0x0a, 0x0e, 0x48, 0x61, 0x73, 0x68,
	0x54, 0x61, 0x62, 0x6c, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x5a, 0x0a, 0x0c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x70, 0x5f, 0x61, 0x64, 0x64,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x70, 0x41, 0x64, 0x64, 0x72, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70,
	0x6f, 0x72, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x66, 0x6c, 0x61,
	0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x46, 0x6c,
	0x61, 0x67, 0x22, 0x46, 0x0a, 0x07, 0x4e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x70, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a,
	0x07, 0x69, 0x70, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x69, 0x70, 0x41, 0x64, 0x64, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x22, 0x07, 0x0a, 0x05, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x22, 0x8a, 0x02, 0x0a, 0x04, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x27, 0x0a, 0x07,
	0x63, 0x75, 0x72, 0x72, 0x5f, 0x69, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e,
	0x63, 0x68, 0x6f, 0x72, 0x64, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x70, 0x52, 0x06, 0x63,
	0x75, 0x72, 0x72, 0x49, 0x70, 0x12, 0x27, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x5f, 0x69, 0x70,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x63, 0x68, 0x6f, 0x72, 0x64, 0x2e, 0x4e,
	0x6f, 0x64, 0x65, 0x5f, 0x69, 0x70, 0x52, 0x06, 0x73, 0x75, 0x63, 0x63, 0x49, 0x70, 0x12, 0x27,
	0x0a, 0x07, 0x70, 0x72, 0x65, 0x64, 0x5f, 0x69, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0e, 0x2e, 0x63, 0x68, 0x6f, 0x72, 0x64, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x70, 0x52,
	0x06, 0x70, 0x72, 0x65, 0x64, 0x49, 0x70, 0x12, 0x39, 0x0a, 0x0a, 0x68, 0x61, 0x73, 0x68, 0x5f,
	0x74, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x63, 0x68,
	0x6f, 0x72, 0x64, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x2e, 0x48, 0x61, 0x73, 0x68, 0x54, 0x61, 0x62,
	0x6c, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x09, 0x68, 0x61, 0x73, 0x68, 0x54, 0x61, 0x62,
	0x6c, 0x65, 0x1a, 0x3c, 0x0a, 0x0e, 0x48, 0x61, 0x73, 0x68, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x22, 0x24, 0x0a, 0x04, 0x69, 0x64, 0x5f, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x0c, 0x0a, 0x01, 0x6d, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x01, 0x6d, 0x32, 0xd8, 0x01, 0x0a, 0x0a, 0x4b, 0x65, 0x79, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x2c, 0x0a, 0x09, 0x52, 0x50, 0x43, 0x4c, 0x6f, 0x6f, 0x6b,
	0x75, 0x70, 0x12, 0x0a, 0x2e, 0x63, 0x68, 0x6f, 0x72, 0x64, 0x2e, 0x4b, 0x65, 0x79, 0x1a, 0x13,
	0x2e, 0x63, 0x68, 0x6f, 0x72, 0x64, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4e,
	0x6f, 0x64, 0x65, 0x12, 0x31, 0x0a, 0x0f, 0x52, 0x50, 0x43, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x65, 0x72, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x0e, 0x2e, 0x63, 0x68, 0x6f, 0x72, 0x64, 0x2e, 0x4e,
	0x6f, 0x64, 0x65, 0x5f, 0x69, 0x70, 0x1a, 0x0e, 0x2e, 0x63, 0x68, 0x6f, 0x72, 0x64, 0x2e, 0x4e,
	0x6f, 0x64, 0x65, 0x5f, 0x69, 0x70, 0x12, 0x2f, 0x0a, 0x0f, 0x52, 0x50, 0x43, 0x47, 0x65, 0x74,
	0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x12, 0x0c, 0x2e, 0x63, 0x68, 0x6f, 0x72,
	0x64, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x0e, 0x2e, 0x63, 0x68, 0x6f, 0x72, 0x64, 0x2e,
	0x4e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x70, 0x12, 0x38, 0x0a, 0x19, 0x52, 0x50, 0x43, 0x43, 0x6c,
	0x6f, 0x73, 0x65, 0x73, 0x74, 0x50, 0x72, 0x65, 0x63, 0x65, 0x64, 0x69, 0x6e, 0x67, 0x46, 0x69,
	0x6e, 0x67, 0x65, 0x72, 0x12, 0x0b, 0x2e, 0x63, 0x68, 0x6f, 0x72, 0x64, 0x2e, 0x69, 0x64, 0x5f,
	0x6d, 0x1a, 0x0e, 0x2e, 0x63, 0x68, 0x6f, 0x72, 0x64, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x5f, 0x69,
	0x70, 0x42, 0x05, 0x5a, 0x03, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_chord_proto_rawDescOnce sync.Once
	file_chord_proto_rawDescData = file_chord_proto_rawDesc
)

func file_chord_proto_rawDescGZIP() []byte {
	file_chord_proto_rawDescOnce.Do(func() {
		file_chord_proto_rawDescData = protoimpl.X.CompressGZIP(file_chord_proto_rawDescData)
	})
	return file_chord_proto_rawDescData
}

var file_chord_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_chord_proto_goTypes = []interface{}{
	(*Key)(nil),          // 0: chord.Key
	(*ResponseNode)(nil), // 1: chord.ResponseNode
	(*NodeIp)(nil),       // 2: chord.Node_ip
	(*Empty)(nil),        // 3: chord.Empty
	(*Node)(nil),         // 4: chord.Node
	(*IdM)(nil),          // 5: chord.id_m
	nil,                  // 6: chord.Key.HashTableEntry
	nil,                  // 7: chord.Node.HashTableEntry
}
var file_chord_proto_depIdxs = []int32{
	6, // 0: chord.Key.hash_table:type_name -> chord.Key.HashTableEntry
	2, // 1: chord.Node.curr_ip:type_name -> chord.Node_ip
	2, // 2: chord.Node.succ_ip:type_name -> chord.Node_ip
	2, // 3: chord.Node.pred_ip:type_name -> chord.Node_ip
	7, // 4: chord.Node.hash_table:type_name -> chord.Node.HashTableEntry
	0, // 5: chord.KeyService.RPCLookup:input_type -> chord.Key
	2, // 6: chord.KeyService.RPCRegisterNode:input_type -> chord.Node_ip
	3, // 7: chord.KeyService.RPCGetSuccessor:input_type -> chord.Empty
	5, // 8: chord.KeyService.RPCClosestPrecedingFinger:input_type -> chord.id_m
	1, // 9: chord.KeyService.RPCLookup:output_type -> chord.ResponseNode
	2, // 10: chord.KeyService.RPCRegisterNode:output_type -> chord.Node_ip
	2, // 11: chord.KeyService.RPCGetSuccessor:output_type -> chord.Node_ip
	2, // 12: chord.KeyService.RPCClosestPrecedingFinger:output_type -> chord.Node_ip
	9, // [9:13] is the sub-list for method output_type
	5, // [5:9] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_chord_proto_init() }
func file_chord_proto_init() {
	if File_chord_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_chord_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Key); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chord_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseNode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chord_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeIp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chord_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chord_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Node); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chord_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IdM); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_chord_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_chord_proto_goTypes,
		DependencyIndexes: file_chord_proto_depIdxs,
		MessageInfos:      file_chord_proto_msgTypes,
	}.Build()
	File_chord_proto = out.File
	file_chord_proto_rawDesc = nil
	file_chord_proto_goTypes = nil
	file_chord_proto_depIdxs = nil
}
